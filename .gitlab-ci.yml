stages:
  - test
  - build
#  - deploy

frontend-test:
  image: node:latest
  stage: test
  before_script:
    - cd Frontend
    - npm install
    - npm install react-scripts -g --silent
  script:
    - npm run test:ci
  coverage: /All files[^|]*\|[^|]*\s+([\d\.]+)/
  artifacts:
    paths:
      - coverage/
    when: always
    reports:
      junit:
        - junit.xml
  allow_failure: true # temporary until tests are introduced to React

backend-test:
  image: maven:3.8.3-openjdk-17
  stage: test
  script:
    - cd Backend
    - mvn test

backend-build:
  image: maven:3.8.3-openjdk-17
  stage: build
  script:
    - cd Backend
    - mvn clean install -Dmaven.test.skip=true
  artifacts:
     paths:
       - Backend/target/*.jar

frontend-build:
  image: node:alpine3.16
  stage: build
  before_script:
    - cd Frontend
    - npm install
    - npm install react-scripts
  script:
    - CI=false npm run build
  artifacts:
     paths:
       - Frontend/build  

#docker:
#  image: docker
#  stage: deploy
#  before_script:
#    - docker info
#    - docker inspect --format='{{.HostConfig.Privileged}}' [container_id]
#  script:
#    - cd Backend
#    - docker buildx build . -t scp-backend
#    - cd ..
#    - cd Frontend
#    - docker buildx build . -t scp-frontend
#    - docker save scp-backend > backend.tar
#    - docker save scp-frontend > frontend.tar
#  artifacts:
#     paths:
#        - ./*.tar  

